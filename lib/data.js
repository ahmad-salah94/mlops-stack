let data_analysis = [
    {
        id: 1,
        label: "DVC",
        src: "/stackicons/dvc.svg",
        alt: "DVC Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 3,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

let experimentation = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

let feature_store = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

let code_repository = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

let ml_pipeline = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

let model_registry = [
    {
        id: 6,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1: "Experiment Tracking",
        tag2: "Reproducibility",
        tag3: "Deployment",
        description: "MLflow is an open-source platform for managing the machine learning lifecycle, including experiment tracking, reproducibility, deployment, and a model registry.",
        advantage1: "Allows managing experiments and model metadata using CLI, Python, R, Java, and REST API.",
        advantage2: "Supports the packaging of data science projects for reproducibility.",
        advantage3: "Provides a central model store for versioning and managing ML models.",
        disadvantage1: "Complex setup might be required for first-time users."
    },
    {
        id: 7,
        label: "Comet ML",
        src: "/stackicons/cometml.svg",
        alt: "Comet ML Icon",
        tag1: "Experiment Tracking",
        tag2: "Model Optimization",
        tag3: "Collaboration",
        description: "Comet ML is a platform for tracking, comparing, explaining, and optimizing ML models, supporting various ML libraries and frameworks.",
        advantage1: "Enables visualization and comparison of machine learning experiments.",
        advantage2: "Supports a wide range of machine learning libraries.",
        advantage3: "Facilitates collaboration among team members.",
        disadvantage1: "May be overwhelming for new users due to its extensive features."
    },
    {
        id: 8,
        label: "Weights & Biases",
        src: "/stackicons/weightsandbiases.svg",
        alt: "Weights & Biases Icon",
        tag1: "Experiment Tracking",
        tag2: "Model Versioning",
        tag3: "Hyperparameter Optimization",
        description: "Weights & Biases provides tools for experiment tracking, model versioning, and hyperparameter optimization, enhancing the ML development workflow.",
        advantage1: "User-friendly central dashboard for ML experiments.",
        advantage2: "Integration with multiple machine learning libraries.",
        advantage3: "Logging of artifacts and visualization of datasets.",
        disadvantage1: "Might require integration efforts with existing ML workflows."
    },
    {
        id: 9,
        label: "Neptune.ai",
        src: "/stackicons/neptuneai.svg",
        alt: "Neptune.ai Icon",
        tag1: "Metadata Storage",
        tag2: "Management",
        tag3: "Model Registry",
        description: "Neptune.ai focuses on metadata storage and management, aiding teams in logging, organizing, and storing metadata for ML models.",
        advantage1: "Efficient ML data store for metadata management.",
        advantage2: "Artifact and model metadata logging capabilities.",
        advantage3: "Database dashboard with intuitive data visualizations.",
        disadvantage1: "May be specialized towards metadata management, lacking broader ML lifecycle tools."
    }
]

let model_serving = [
    {
        id: 1,
        label: "Modelbit",
        src: "/stackicons/modelbit.svg",
        alt: "Modelbit Icon",
        tag1: "Scalability",
        tag2: "Performance",
        tag3: "Model Lifecycle Management",
        description: "Modelbit is a cloud-native platform designed for deploying, serving, and managing machine learning models. It automates model deployment allowing easy transition from training to production.",
        advantage1: "Supports various deployment options like serverless functions and Kubernetes clusters.",
        advantage2: "Provides automatic model versioning, A/B testing, and canary releases.",
        advantage3: "Ensures optimal resource utilization and low latency through automatic scaling.",
        disadvantage1: "Focuses more on cloud-native technologies which might require adaptation for traditional infrastructures."
    },
    {
        id: 2,
        label: "TensorFlow Serving",
        src: "/stackicons/tensorflowserving.svg",
        alt: "TensorFlow Serving Icon",
        tag1: "Flexibility",
        tag2: "Efficiency",
        tag3: "Scalability",
        description: "TensorFlow Serving is an open-source platform aimed at serving TensorFlow models in production environments. It provides a flexible and efficient way for deploying models as services.",
        advantage1: "Supports various deployment scenarios including standalone servers and Kubernetes.",
        advantage2: "Provides gRPC and REST API for easy integration with client applications.",
        advantage3: "Allows for model versioning and A/B testing for seamless updates.",
        disadvantage1: "Primarily designed for TensorFlow models which may limit its use with other frameworks."
    },
    {
        id: 3,
        label: "KServe",
        src: "/stackicons/kserve.svg",
        alt: "KServe Icon",
        tag1: "Kubernetes-native",
        tag2: "Scalability",
        tag3: "Extensibility",
        description: "KServe provides a Kubernetes-native way to serve machine learning models, leveraging the scalability and flexibility of Kubernetes for model deployment.",
        advantage1: "Supports autoscaling based on incoming traffic for efficient resource use.",
        advantage2: "Integrates with model registries and artifact stores for seamless model retrieval and deployment.",
        advantage3: "Offers a pluggable architecture for customizing serving pipelines.",
        disadvantage1: "Requires familiarity with Kubernetes for setup and management."
    },
    {
        id: 4,
        label: "Seldon",
        src: "/stackicons/seldon.svg",
        alt: "Seldon Icon",
        tag1: "Unified Framework",
        tag2: "Model Serving Scenarios",
        tag3: "Scalability",
        description: "Seldon is an open-source platform that facilitates the deployment, serving, and management of machine learning models, suitable for a wide range of deployment scenarios.",
        advantage1: "Supports a broad range of serving scenarios including real-time and batch processing.",
        advantage2: "Utilizes a standardized format for model packaging and deployment.",
        advantage3: "Enables A/B testing and can handle complex model graphs.",
        disadvantage1: "May involve a learning curve to fully leverage its comprehensive features."
    }
]

let experimentTracking_metadataStore = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1: "Experiment Tracking",
        tag2: "Model Registry",
        tag3: "Project Packaging",
        description: "MLflow is an open-source platform assisting in managing the ML lifecycle, including experiment tracking, model registry, and reproducibility.",
        advantage1: "Enables storing and accessing code, data, configurations, and results.",
        advantage2: "Facilitates reproducibility with MLflow Projects and MLflow Models.",
        advantage3: "Includes a central model store for managing machine learning models.",
        disadvantage1: "Interface may lag with hundreds or thousands of runs; lacks advanced team collaboration features."
    },
    {
        id: 2,
        label: "Neptune",
        src: "/stackicons/neptuneai.svg",
        alt: "Neptune Icon",
        tag1: "ML Metadata",
        tag2: "Model Registry",
        tag3: "Experiment Tracking",
        description: "Neptune aids teams in organizing ML metadata and supports the lifecycle from experiment tracking to model deployment.",
        advantage1: "Centralized store for all ML experiments and metadata.",
        advantage2: "Enables live monitoring of model training and evaluations.",
        advantage3: "Integrates with 30+ tools including TensorFlow, Keras, and MLflow.",
        disadvantage1: "Set up and integration may require initial learning curve."
    }
]

let model_monitoring = [
    {
        id: 1,
        label: "MLflow",
        src: "/stackicons/mlflow.svg",
        alt: "MLflow Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
    {
        id: 2,
        label: "Kedro",
        src: "/stackicons/kedro.svg",
        alt: "Kedro Icon",
        tag1:"Experiment tracking",
        tag2:"Data versioning",
        tag3:"Pipeline orchestration",
        description:"DVC is an open-source version control system for machine learning projects.",
        advantage1:"DVC is an open-source version control system for machine learning projects.",
        advantage2:"You want many options for remote storage of your data (S3, Minio, Google Cloud Storage, Google Drive, Azure Blob Storage, etc.)",
        advantage3:"You want to create pipelines and track your experiments.",
        disadvantage1:"You must use DVC alongside a Git repository to enable its versioning features.",
    },
]

module.exports = {
    data_analysis,
    experimentation,
    feature_store,
    code_repository,
    ml_pipeline,
    model_registry,
    model_serving,
    experimentTracking_metadataStore,
    model_monitoring
}